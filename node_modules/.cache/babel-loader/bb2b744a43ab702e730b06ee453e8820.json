{"remainingRequest":"C:\\Users\\Lenovo\\Desktop\\vue\\New woods\\testcase\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Lenovo\\Desktop\\vue\\New woods\\testcase\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Lenovo\\Desktop\\vue\\New woods\\testcase\\src\\store\\product.js","dependencies":[{"path":"C:\\Users\\Lenovo\\Desktop\\vue\\New woods\\testcase\\src\\store\\product.js","mtime":1543933666129},{"path":"C:\\Users\\Lenovo\\Desktop\\vue\\New woods\\testcase\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lenovo\\Desktop\\vue\\New woods\\testcase\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Lenovo\\Desktop\\vue\\New woods\\testcase\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _objectSpread from \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\vue\\\\New woods\\\\testcase\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\vue\\\\New woods\\\\testcase\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\vue\\\\New woods\\\\testcase\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport * as fb from 'firebase';\n\nvar Product = function Product(title, vendor, text, ownerId) {\n  var id = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n\n  _classCallCheck(this, Product);\n\n  this.title = title, this.vendor = vendor, this.text = text, this.ownerId = ownerId, this.id = id;\n};\n\nexport default {\n  state: {\n    product: []\n  },\n  mutations: {\n    createProduct: function createProduct(state, payload) {\n      state.product.push(payload);\n    },\n    loadProduct: function loadProduct(state, payload) {\n      state.product = payload;\n    }\n  },\n  actions: {\n    createProduct: function () {\n      var _createProduct = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(_ref, payload) {\n        var commit, getters, newProduct, product;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                commit = _ref.commit, getters = _ref.getters;\n                commit('clearError');\n                commit('setLoading', true);\n                _context.prev = 3;\n                newProduct = new Product(payload.title, payload.vendor, payload.text, getters.user.id);\n                _context.next = 7;\n                return fb.database().ref('registers').push(newProduct);\n\n              case 7:\n                product = _context.sent;\n                commit('setLoading', false);\n                commit('createProduct', _objectSpread({}, newProduct, {\n                  id: product.key\n                }));\n                _context.next = 17;\n                break;\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](3);\n                commit('setError', _context.t0.message);\n                commit('setLoading', false);\n                throw _context.t0;\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[3, 12]]);\n      }));\n\n      return function createProduct(_x, _x2) {\n        return _createProduct.apply(this, arguments);\n      };\n    }(),\n    fetchProducts: function () {\n      var _fetchProducts = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(_ref2) {\n        var commit, resultProducts, productsVal, products;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                commit = _ref2.commit;\n                commit('clearError');\n                commit('setLoading', true);\n                resultProducts = [];\n                _context2.prev = 4;\n                _context2.next = 7;\n                return fb.database().ref('registers').once('value');\n\n              case 7:\n                productsVal = _context2.sent;\n                products = productsVal.val();\n                Object.keys(products).forEach(function (key) {\n                  var product = products[key];\n                  resultProducts.push(new Product(product.title, product.vendor, product.text, product.ownerId, key));\n                  commit('loadProduct', resultProducts);\n                  commit('setLoading', false);\n                });\n                _context2.next = 17;\n                break;\n\n              case 12:\n                _context2.prev = 12;\n                _context2.t0 = _context2[\"catch\"](4);\n                commit('setError', _context2.t0.message);\n                commit('setLoading', false);\n                throw _context2.t0;\n\n              case 17:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[4, 12]]);\n      }));\n\n      return function fetchProducts(_x3) {\n        return _fetchProducts.apply(this, arguments);\n      };\n    }()\n  },\n  getters: {\n    product: function product(state) {\n      return state.product;\n    },\n    myProduct: function myProduct(state, getters) {\n      return state.product.filter(function (product) {\n        return product.ownerId === getters.user.id;\n      });\n    }\n  }\n};",{"version":3,"sources":["C:\\Users\\Lenovo\\Desktop\\vue\\New woods\\testcase\\src\\store\\product.js"],"names":["fb","Product","title","vendor","text","ownerId","id","state","product","mutations","createProduct","payload","push","loadProduct","actions","commit","getters","newProduct","user","database","ref","key","message","fetchProducts","resultProducts","once","productsVal","products","val","Object","keys","forEach","myProduct","filter"],"mappings":"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","sourcesContent":["import * as fb from 'firebase'\r\n\r\n\r\nclass Product {\r\n    constructor(title, vendor, text, ownerId, id = null) {\r\n        this.title = title,\r\n            this.vendor = vendor,\r\n            this.text = text,\r\n            this.ownerId = ownerId,\r\n            this.id = id\r\n    }\r\n}\r\nexport default {\r\n    state: {\r\n        product: []\r\n    },\r\n    mutations: {\r\n        createProduct(state, payload) {\r\n            state.product.push(payload)\r\n        },\r\n        loadProduct(state, payload) {\r\n            state.product = payload\r\n        }\r\n    },\r\n    actions: {\r\n        async  createProduct({ commit, getters }, payload) {\r\n            commit('clearError')\r\n            commit('setLoading', true)\r\n            try {\r\n                const newProduct = new Product(\r\n                    payload.title,\r\n                    payload.vendor,\r\n                    payload.text,\r\n                    getters.user.id,\r\n                )\r\n                const product = await fb.database().ref('registers').push(newProduct)\r\n                commit('setLoading', false)\r\n                commit('createProduct', {\r\n                    ...newProduct,\r\n                    id: product.key\r\n                })\r\n            } catch (error) {\r\n                commit('setError', error.message)\r\n                commit('setLoading', false)\r\n                throw error\r\n            }   \r\n            // commit('createProduct', payload)\r\n        },\r\n        async fetchProducts({ commit }) {\r\n            commit('clearError')\r\n            commit('setLoading', true)\r\n            const resultProducts = []\r\n            try {\r\n                const productsVal = await fb.database().ref('registers').once('value')\r\n                const products = productsVal.val()\r\n                Object.keys(products).forEach(key => {\r\n                    const product = products[key]\r\n                    resultProducts.push(\r\n                        new Product(\r\n                            product.title,\r\n                            product.vendor,\r\n                            product.text,\r\n                            product.ownerId,\r\n                            key,\r\n                        )\r\n                    )\r\n                    commit('loadProduct', resultProducts)\r\n                    commit('setLoading', false)\r\n                })\r\n            } catch (error) {\r\n                commit('setError', error.message)\r\n                commit('setLoading', false)\r\n                throw error\r\n            }\r\n        }\r\n    },\r\n    getters: {\r\n        product(state) {\r\n            return state.product\r\n        },\r\n        myProduct(state, getters) {\r\n            return state.product.filter(product => {\r\n                return product.ownerId === getters.user.id\r\n            })\r\n        }\r\n    }\r\n}"]}]}